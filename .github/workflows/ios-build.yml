name: iOS Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Sync Capacitor
        run: npx cap sync ios

      - name: Set Team ID in Xcode project
        run: |
          cd ios/App
          # Update project.pbxproj to set team ID
          sed -i.bak 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = 5PCJV8QVA7;/g' App.xcodeproj/project.pbxproj
          sed -i.bak 's/DEVELOPMENT_TEAM = ;/DEVELOPMENT_TEAM = 5PCJV8QVA7;/g' App.xcodeproj/project.pbxproj
          # Also ensure ProvisioningStyle is Manual
          sed -i.bak 's/ProvisioningStyle = Automatic;/ProvisioningStyle = Manual;/g' App.xcodeproj/project.pbxproj

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install Fastlane
        run: |
          cd ios/App
          gem install fastlane

      - name: Create Fastlane Appfile
        run: |
          cd ios/App
          mkdir -p fastlane
          cat > fastlane/Appfile << EOF
          app_identifier("com.ninetydaychallenge.app")
          apple_id("${{ secrets.APPLE_ID }}")
          team_id("5PCJV8QVA7")
          EOF

      - name: Create Fastlane Fastfile
        run: |
          cd ios/App
          cat > fastlane/Fastfile << 'EOF'
          default_platform(:ios)

          platform :ios do
            desc "Build and upload to TestFlight"
            lane :beta do
              setup_ci

              # Load App Store Connect API Key from file
              api_key = app_store_connect_api_key(
                key_id: ENV["APP_STORE_KEY_ID"],
                issuer_id: ENV["APP_STORE_ISSUER_ID"],
                key_filepath: "fastlane/AuthKey.p8",
                duration: 1200,
                in_house: false
              )

              # Create or update certificates and provisioning profiles
              match(
                type: "appstore",
                readonly: false,
                git_url: ENV["MATCH_REPO"],
                git_basic_authorization: Base64.strict_encode64(ENV["MATCH_GIT_TOKEN"]),
                api_key: api_key
              )

              # Update code signing settings to use the correct profile
              update_code_signing_settings(
                use_automatic_signing: false,
                path: "App.xcodeproj",
                team_id: "5PCJV8QVA7",
                code_sign_identity: "Apple Distribution",
                profile_name: "match AppStore com.ninetydaychallenge.app"
              )

              # Increment build number
              increment_build_number(
                xcodeproj: "App.xcodeproj"
              )

              # Build the app
              build_app(
                scheme: "App",
                workspace: "App.xcworkspace",
                export_method: "app-store",
                export_team_id: "5PCJV8QVA7",
                xcargs: "DEVELOPMENT_TEAM=5PCJV8QVA7",
                export_options: {
                  teamID: "5PCJV8QVA7",
                  provisioningProfiles: {
                    "com.ninetydaychallenge.app" => "match AppStore com.ninetydaychallenge.app"
                  }
                }
              )

              # Upload to TestFlight
              upload_to_testflight(
                api_key: api_key,
                skip_waiting_for_build_processing: true
              )
            end
          end
          EOF

      - name: Create App Store Connect API Key
        run: |
          cd ios/App/fastlane
          echo "${{ secrets.APP_STORE_KEY_BASE64 }}" | base64 --decode > AuthKey.p8

      - name: Run Fastlane
        env:
          MATCH_REPO: ${{ secrets.MATCH_REPO }}
          MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
          APP_STORE_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
          APP_STORE_KEY_CONTENT: ${{ secrets.APP_STORE_KEY_CONTENT }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          cd ios/App
          fastlane beta
